-- Making sure the data was imported correctly 
SELECT * 
FROM `long-justice-350817.Covid.CovidDeaths`
-- Where continent is not null
ORDER BY 3,4

SELECT * 
FROM `long-justice-350817.Covid.CovidVaccinations`
ORDER BY 3,4

-- Select data to be used 
SELECT location, date, total_cases, new_cases, total_deaths, population
FROM `long-justice-350817.Covid.CovidDeaths` 
ORDER BY 1,2

-- Looking at total_cases vs total_deaths
-- Shows the likelihood of dying if you contract covid in the US 
SELECT location, date, total_cases, total_deaths, (total_deaths/total_cases) * 100 AS mortality_rate
FROM `long-justice-350817.Covid.CovidDeaths` 
WHERE location like '%States%'
ORDER BY 1,2

-- Looking at Total Cases vs Population 
-- Shows the percentage of population with Covid, almost 10% of population by 2021-04-30
SELECT location, date, total_cases, Population, (total_cases/Population) * 100 AS percent_population_with_covid
FROM `long-justice-350817.Covid.CovidDeaths` 
WHERE location like '%States%'
ORDER BY 1,2

-- Looking at Countries with Highest infection rate 
-- Andorra is the country with Highest percent population infected at 17.1%
SELECT location, MAX(total_cases) AS HighestInfectionCount, Population, MAX(total_cases/Population) * 100 AS max_percent_population_infected
FROM `long-justice-350817.Covid.CovidDeaths` 
GROUP BY location, population
ORDER BY max_percent_population_infected DESC

-- Showing the Countries with Highest Death Count per population 
SELECT location, MAX(total_deaths) AS total_death_count
FROM `long-justice-350817.Covid.CovidDeaths` 
WHERE continent IS NOT NULL
GROUP BY location
ORDER BY total_death_count DESC

-- Break things down by continent 
SELECT continent, MAX(total_deaths) AS total_death_count
FROM `long-justice-350817.Covid.CovidDeaths` 
WHERE continent IS NOT NULL
GROUP BY continent 
ORDER BY total_death_count DESC

-- A more accurate way to break things down by continent 
SELECT location, MAX(total_deaths) AS total_death_count
FROM `long-justice-350817.Covid.CovidDeaths` 
WHERE continent IS NULL
GROUP BY location 
ORDER BY total_death_count DESC

-- Global Numbers
-- by date 
SELECT date, SUM(new_cases) AS new_cases, SUM(new_deaths) AS new_deaths, SUM(new_deaths)/SUM(new_cases)*100 AS mortality_rate
FROM `long-justice-350817.Covid.CovidDeaths` 
WHERE continent is not null
GROUP BY date
ORDER BY 1,2

-- Overall
SELECT SUM(new_cases) AS total_cases, SUM(new_deaths) AS total_deaths, SUM(new_deaths)/SUM(new_cases)*100 AS mortality_rate
FROM `long-justice-350817.Covid.CovidDeaths` 
WHERE continent is not null
ORDER BY 1,2




-- Joining tables
-- Looking at total population vs vacccination
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS rolling_total_vaccinations, 
FROM `long-justice-350817.Covid.CovidDeaths` dea
JOIN `long-justice-350817.Covid.CovidVaccinations` vac
  ON dea.location = vac.location AND dea.date = vac.date 
WHERE dea.continent is not null 
ORDER BY 1,2,3

-- use CTE

WITH pop_vs_vac
AS (
  SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
  SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS rolling_total_vaccinations, 
  FROM `long-justice-350817.Covid.CovidDeaths` dea
  JOIN `long-justice-350817.Covid.CovidVaccinations` vac
    ON dea.location = vac.location AND dea.date = vac.date 
  WHERE dea.continent is not null 
  -- ORDER BY 2,3 
)
SELECT *, (rolling_total_vaccinations/population)*100 AS rolling_vaccinated_population
FROM  pop_vs_vac


/*
-- TEMP Table

DROP TABLE IF EXISTS percent_population_vaccinated 
CREATE TEMP TABLE percent_population_vaccinated
(
  continent nvarchar(255),
  location nvarchar(255),
  date datetime,
  population numeric, 
  new_vaccinatnions numeric, 
  rolling_vaccinated_population numeric
)

INSERT INTO percent_population_vaccinated
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
  SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS rolling_total_vaccinations, 
  FROM `long-justice-350817.Covid.CovidDeaths` dea
  JOIN `long-justice-350817.Covid.CovidVaccinations` vac
    ON dea.location = vac.location AND dea.date = vac.date 
  WHERE dea.continent is not null 
  -- ORDER BY 2,3 

SELECT *, (rolling_total_vaccinations/population)*100 AS rolling_vaccinated_population
FROM  percent_population_vaccinated


*/

-- Creating view to store data for later visualizations 

CREATE VIEW long-justice-350817.Covid.percent_vaccinated AS 
  SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
    SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS rolling_total_vaccinations, 
    FROM `long-justice-350817.Covid.CovidDeaths` dea
    JOIN `long-justice-350817.Covid.CovidVaccinations` vac
      ON dea.location = vac.location AND dea.date = vac.date 
    WHERE dea.continent IS NOT NULL
    -- ORDER BY 2,3 








